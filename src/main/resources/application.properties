#server.port=8888
#server.servlet.context-path=/SpringBoard 
# => 접속 루트에 해당 project명 추가하고 싶은 경우 설정 
# => (e.g. localhost:8080 -> localhost:8080/SpringBoard)

# ==============================
# = MVC
# ==============================
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# ==============================
# = DATA SOURCE
# ==============================
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://192.168.23.15:3306/koposcore?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
spring.datasource.username = root
spring.datasource.password = kopo18

# ==============================
# = JPA / HIBERNATE
# ==============================
spring.jpa.show-sql = true	
	#디버깅 목적 -> 쿼리 날린 내용 console 창에 나오게끔... (개발 시에만 true -> 배포 시에는 false)
spring.jpa.hibernate.ddl-auto = update
	#Annotation 정보로 database ddl을 자동으로 수행할지 여부 (update(수정하기), create(무조건 없애고 새로 만들기), ...)
	#실제 운영 시에는 schema를 함부로 바꾸면 안 되기 때문에, update/create 쓰지 않음 
	# --> 데이터베이스에 반영하지 않도록 invalid (?) 등 사용.
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
	# 방언 -> 표준 기능 외, 특정 DB (e.g. MariaDB, ...) 에서만 제공하는 추가적(비표준) 기능이 있을 수 있음 -> 이에 대한 처리